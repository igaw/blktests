#!/bin/bash
# SPDX-License-Identifier: GPL-3.0+
# Copyright (C) 2019 Logan Gunthorpe
#
# Test nvme discovery generation counter

. tests/nvme/rc

DESCRIPTION="ensure the discovery generation counter is updated appropriately"
QUICK=1

requires() {
	_nvme_requires
	_have_loop
	_require_nvme_trtype_is_fabrics
}

test() {
	local port
	local genctr
	local subsys="blktests-subsystem-"

	echo "Running ${TEST_NAME}"

	_setup_nvmet

	port="$(_create_nvmet_port "${nvme_trtype}")"

	_create_nvmet_subsystem "${subsys}1" "$(losetup -f)"
	_add_nvmet_subsys_to_port "${port}" "${subsys}1"

	genctr=$(_discovery_genctr)

	_create_nvmet_subsystem "${subsys}2" "$(losetup -f)"
	_add_nvmet_subsys_to_port "${port}" "${subsys}2"

	genctr=$(_check_genctr "${genctr}" "adding a subsystem to a port")

	echo 0 > "${NVMET_CFS}/subsystems/${subsys}2/attr_allow_any_host"

	genctr=$(_check_genctr "${genctr}" "clearing attr_allow_any_host")

	echo 1 > "${NVMET_CFS}/subsystems/${subsys}2/attr_allow_any_host"

	genctr=$(_check_genctr "${genctr}" "setting attr_allow_any_host")

	_remove_nvmet_subsystem_from_port "${port}" "${subsys}2"
	_remove_nvmet_subsystem "${subsys}2"

	genctr=$(_check_genctr "${genctr}" "removing a subsystem from a port")

	_remove_nvmet_subsystem_from_port "${port}" "${subsys}1"
	_remove_nvmet_subsystem "${subsys}1"

	_remove_nvmet_port "${port}"

	echo "Test complete"
}
