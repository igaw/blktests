#!/bin/bash
# SPDX-License-Identifier: GPL-3.0+
# Copyright (C) 2022 Hannes Reinecke, SUSE Labs
#
# Create authenticated connections

. tests/nvme/rc

DESCRIPTION="Create authenticated connections"
QUICK=1

requires() {
	_nvme_requires
	_have_loop
	_have_kernel_option NVME_AUTH
	_have_kernel_option NVME_TARGET_AUTH
	_require_nvme_trtype_is_fabrics
	_require_nvme_cli_auth
}


test() {
	echo "Running ${TEST_NAME}"

	_setup_nvmet

	local port
	local hostkey
	local ctrldev

	hostkey="$(nvme gen-dhchap-key -n ${def_subsysnqn} 2> /dev/null)"
	if [ -z "$hostkey" ] ; then
		echo "nvme gen-dhchap-key failed"
		return 1
	fi

	truncate -s "${nvme_img_size}" "${def_file_path}"

	_create_nvmet_subsystem "${def_subsysnqn}" "${def_file_path}" \
		"${def_subsys_uuid}"
	port="$(_create_nvmet_port "${nvme_trtype}")"
	_add_nvmet_subsys_to_port "${port}" "${def_subsysnqn}"
	_create_nvmet_host "${def_subsysnqn}" "${def_hostnqn}" "${hostkey}"

	# Test unauthenticated connection (should fail)
	echo "Test unauthenticated connection (should fail)"
	_nvme_connect_subsys "${nvme_trtype}" "${def_subsysnqn}" \
			     --hostnqn "${def_hostnqn}" \
			     --hostid "${def_hostid}"

	_nvme_disconnect_subsys "${def_subsysnqn}"

	# Test authenticated connection
	echo "Test authenticated connection"
	_nvme_connect_subsys "${nvme_trtype}" "${def_subsysnqn}" \
			     --hostnqn "${def_hostnqn}" \
			     --hostid "${def_hostid}" \
			     --dhchap-secret "${hostkey}"

	udevadm settle

	_nvme_disconnect_subsys "${def_subsysnqn}"

	_remove_nvmet_subsystem_from_port "${port}" "${def_subsysnqn}"
	_remove_nvmet_subsystem "${def_subsysnqn}"

	_remove_nvmet_port "${port}"

	_remove_nvmet_host "${def_hostnqn}"

	rm "${def_file_path}"

	echo "Test complete"
}
