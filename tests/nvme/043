#!/bin/bash
# SPDX-License-Identifier: GPL-3.0+
# Copyright (C) 2022 Hannes Reinecke, SUSE Labs
#
# Test hash and dh group variations for authenticated connections

. tests/nvme/rc

DESCRIPTION="Test hash and DH group variations for authenticated connections"
QUICK=1

requires() {
	_nvme_requires
	_have_loop
	_have_kernel_option NVME_AUTH
	_have_kernel_option NVME_TARGET_AUTH
	_require_nvme_trtype_is_fabrics
	_require_nvme_cli_auth
	_have_driver dh_generic
}


test() {
	echo "Running ${TEST_NAME}"

	_setup_nvmet

	local port
	local subsys_name="blktests-subsystem-1"
	local hostid
	local hostnqn
	local file_path="${TMPDIR}/img"
	local hash
	local dhgroup
	local hostkey
	local ctrldev

	hostid="${def_hostid}"
	hostnqn="${def_hostnqn}"
	hostkey="$(nvme gen-dhchap-key -n ${hostnqn} 2> /dev/null)"
	if [ -z "$hostkey" ] ; then
		echo "nvme gen-dhchap-key failed"
		return 1
	fi

	truncate -s "${nvme_img_size}" "${file_path}"

	_create_nvmet_subsystem "${def_subsysnqn}" "${file_path}"
	port="$(_create_nvmet_port "${nvme_trtype}")"
	_add_nvmet_subsys_to_port "${port}" "${def_subsysnqn}"
	_create_nvmet_host "${def_subsysnqn}" "${hostnqn}" "${hostkey}"

	for hash in "hmac(sha256)" "hmac(sha384)" "hmac(sha512)" ; do

		echo "Testing hash ${hash}"

		_set_nvmet_hash "${hostnqn}" "${hash}"

		_nvme_connect_subsys "${nvme_trtype}" "${def_subsysnqn}" \
				     --hostnqn "${hostnqn}" \
				     --hostid "${hostid}" \
				     --dhchap-secret "${hostkey}"

		udevadm settle

		_nvme_disconnect_subsys "${def_subsysnqn}"
	done

	for dhgroup in "ffdhe2048" "ffdhe3072" "ffdhe4096" "ffdhe6144" "ffdhe8192" ; do

		echo "Testing DH group ${dhgroup}"

		_set_nvmet_dhgroup "${hostnqn}" "${dhgroup}"

		_nvme_connect_subsys "${nvme_trtype}" "${def_subsysnqn}" \
				      --hostnqn "${hostnqn}" \
				      --hostid "${hostid}" \
				      --dhchap-secret "${hostkey}"

		udevadm settle

		_nvme_disconnect_subsys "${def_subsysnqn}"
	done

	_remove_nvmet_subsystem_from_port "${port}" "${def_subsysnqn}"
	_remove_nvmet_subsystem "${def_subsysnqn}"

	_remove_nvmet_port "${port}"

	_remove_nvmet_host "${hostnqn}"

	rm "${file_path}"

	echo "Test complete"
}
