#!/bin/bash
# SPDX-License-Identifier: GPL-3.0+
# Copyright (C) 2018 Johannes Thumshirn
#
# Regression test for patch "nvmet: switch loopback target state to connecting
# when resetting"

. tests/nvme/rc

DESCRIPTION="reset local loopback target"
QUICK=1

requires() {
	_nvme_requires
	_have_loop && _have_module_param_value nvme_core multipath Y
	_require_nvme_trtype_is_fabrics
}

test() {
	echo "Running ${TEST_NAME}"

	_setup_nvmet

	local port
	port="$(_create_nvmet_port "${nvme_trtype}")"

	truncate -s "${nvme_img_size}" "$TMPDIR/img"

	local loop_dev
	loop_dev="$(losetup -f --show "$TMPDIR/img")"

	_create_nvmet_subsystem "blktests-subsystem-1" "${loop_dev}" \
		"91fdba0d-f87b-4c25-b80f-db7be1418b9e"
	_add_nvmet_subsys_to_port "${port}" "blktests-subsystem-1"

	_nvme_connect_subsys "${nvme_trtype}" blktests-subsystem-1

	local nvmedev
	nvmedev=$(_find_nvme_dev "blktests-subsystem-1")

	udevadm settle

	echo 1 > "/sys/class/nvme/${nvmedev}/reset_controller"

	_nvme_disconnect_ctrl "${nvmedev}"
	_remove_nvmet_subsystem_from_port "${port}" "blktests-subsystem-1"
	_remove_nvmet_port "${port}"

	_remove_nvmet_subsystem "blktests-subsystem-1"
	losetup -d "$loop_dev"
	rm "$TMPDIR/img"

	echo "Test complete"
}
