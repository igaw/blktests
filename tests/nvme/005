#!/bin/bash
# SPDX-License-Identifier: GPL-3.0+
# Copyright (C) 2018 Johannes Thumshirn
#
# Regression test for patch "nvmet: switch loopback target state to connecting
# when resetting"

. tests/nvme/rc

DESCRIPTION="reset local loopback target"
QUICK=1

requires() {
	_nvme_requires
	_have_loop && _have_module_param_value nvme_core multipath Y
	_require_nvme_trtype_is_fabrics
}

test() {
	echo "Running ${TEST_NAME}"

	_setup_nvmet

	local port
	local loop_dev
	local nvmedev

	port="$(_create_nvmet_port "${nvme_trtype}")"

	truncate -s "${nvme_img_size}" "${def_file_path}"

	loop_dev="$(losetup -f --show "${def_file_path}")"

	_create_nvmet_subsystem "${def_subsysnqn}" "${loop_dev}" \
		"${def_subsys_uuid}"
	_add_nvmet_subsys_to_port "${port}" "${def_subsysnqn}"
	_create_nvmet_host "${def_subsysnqn}" "${def_hostnqn}"

	_nvme_connect_subsys "${nvme_trtype}" "${def_subsysnqn}"

	nvmedev=$(_find_nvme_dev "${def_subsysnqn}")

	udevadm settle

	echo 1 > "/sys/class/nvme/${nvmedev}/reset_controller"

	_nvme_disconnect_ctrl "${nvmedev}"
	_remove_nvmet_subsystem_from_port "${port}" "${def_subsysnqn}"
	_remove_nvmet_port "${port}"
	_remove_nvmet_subsystem "${def_subsysnqn}"
	_remove_nvmet_host "${def_hostnqn}"

	losetup -d "$loop_dev"
	rm "${def_file_path}"

	echo "Test complete"
}
